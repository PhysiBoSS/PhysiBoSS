<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
###############################################################################
# If you use PhysiCell in your project, please cite PhysiCell and the version #
# number, such as below:                                                      #
#                                                                             #
# We implemented and solved the model using PhysiCell (Version x.y.z) [1].    #
#                                                                             #
# [1] A Ghaffarizadeh, R Heiland, SH Friedman, SM Mumenthaler, and P Macklin, #
#     PhysiCell: an Open Source Physics-Based Cell Simulator for Multicellu-  #
#     lar Systems, PLoS Comput. Biol. 14(2): e1005991, 2018                   #
#     DOI: 10.1371/journal.pcbi.1005991                                       #
#                                                                             #
# See VERSION.txt or call get_PhysiCell_version() to get the current version  #
#     x.y.z. Call display_citations() to get detailed information on all cite-#
#     able software used in your PhysiCell application.                       #
#                                                                             #
# Because PhysiCell extensively uses BioFVM, we suggest you also cite BioFVM  #
#     as below:                                                               #
#                                                                             #
# We implemented and solved the model using PhysiCell (Version x.y.z) [1],    #
# with BioFVM [2] to solve the transport equations.                           #
#                                                                             #
# [1] A Ghaffarizadeh, R Heiland, SH Friedman, SM Mumenthaler, and P Macklin, #
#     PhysiCell: an Open Source Physics-Based Cell Simulator for Multicellu-  #
#     lar Systems, PLoS Comput. Biol. 14(2): e1005991, 2018                   #
#     DOI: 10.1371/journal.pcbi.1005991                                       #
#                                                                             #
# [2] A Ghaffarizadeh, SH Friedman, and P Macklin, BioFVM: an efficient para- #
#     llelized diffusive transport solver for 3-D biological simulations,     #
#     Bioinformatics 32(8): 1256-8, 2016. DOI: 10.1093/bioinformatics/btv730  #
#                                                                             #
###############################################################################
#                                                                             #
# BSD 3-Clause License (see https://opensource.org/licenses/BSD-3-Clause)     #
#                                                                             #
# Copyright (c) 2015-2018, Paul Macklin and the PhysiCell Project             #
# All rights reserved.                                                        #
#                                                                             #
# Redistribution and use in source and binary forms, with or without          #
# modification, are permitted provided that the following conditions are met: #
#                                                                             #
# 1. Redistributions of source code must retain the above copyright notice,   #
# this list of conditions and the following disclaimer.                       #
#                                                                             #
# 2. Redistributions in binary form must reproduce the above copyright        #
# notice, this list of conditions and the following disclaimer in the         #
# documentation and/or other materials provided with the distribution.        #
#                                                                             #
# 3. Neither the name of the copyright holder nor the names of its            #
# contributors may be used to endorse or promote products derived from this   #
# software without specific prior written permission.                         #
#                                                                             #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" #
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   #
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  #
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   #
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         #
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF        #
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    #
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN     #
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)     #
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  #
# POSSIBILITY OF SUCH DAMAGE.                                                 #
#                                                                             #
###############################################################################
*/
--> 

<!--
<user_details />
-->

<PhysiCell_settings version="devel-version">
	<domain>
		<x_min>-400</x_min> <!-- 3250 um for RTCA DP-->
		<x_max>400</x_max>
		<y_min>-400</y_min>
		<y_max>400</y_max>
		<z_min>-40</z_min>
		<z_max>40</z_max>
		<dx>20</dx> <!--60 if 3250 -->
		<dy>20</dy> <!-- bug: dx, dy, dz result in segfault of add_potentials() function if higher than 15 -->
		<dz>20</dz>
		<use_2D>true</use_2D>
	</domain>
	
	<overall>
		<max_time units="min"> 4200 </max_time> <!-- 4200 (70 hrs), simulating their experiment --> 
		<time_units>min</time_units>
		<space_units>micron</space_units>

			<dt_diffusion units="min">0.02</dt_diffusion>
			<dt_mechanics units="min">0.1</dt_mechanics>
			<dt_phenotype units="min">6</dt_phenotype>	
	</overall>
	
	<parallel>
		<omp_num_threads>8</omp_num_threads>
	</parallel> 
	
	<save>
		<folder>output_3</folder> <!-- use . for root --> 

		<full_data>
			<interval units="min">40</interval>
			<enable>true</enable>
		</full_data>
		
		<SVG>
			<interval units="min">40</interval>
			<enable>true</enable>
		</SVG>
		
		<legacy_data>
			<enable>true</enable>
		</legacy_data>
	</save>
	
	<microenvironment_setup>
		<variable name="oxygen" units="mmHg" ID="0">
			<physical_parameter_set>
				<diffusion_coefficient units="micron^2/min">100000.0</diffusion_coefficient>
				<decay_rate units="1/min">.1</decay_rate> 
			</physical_parameter_set>
			<initial_condition units="mmHg">38.0</initial_condition>
			<Dirichlet_boundary_condition units="mmHg" enabled="true">38.0</Dirichlet_boundary_condition>
		</variable>
		
		<variable name="drug_X" units="mmol" ID="1">
			<physical_parameter_set>
				<diffusion_coefficient units="micron^2/min">100000.0</diffusion_coefficient>
				<decay_rate units="1/min">0.000001</decay_rate> <!-- Fetch from drug half-life -->
			</physical_parameter_set>
			<initial_condition units="molecules/voxel">0.0</initial_condition>
			<Dirichlet_boundary_condition units="molecules/voxel" enabled="false">1.0</Dirichlet_boundary_condition>
		</variable>

		<variable name="drug_Y" units="mmol" ID="2">
			<physical_parameter_set>
				<diffusion_coefficient units="micron^2/min">100000.0</diffusion_coefficient>
				<decay_rate units="1/min">0.0</decay_rate> <!-- Fetch from drug half-life -->
			</physical_parameter_set>
			<initial_condition units="molecules/voxel">0.0</initial_condition>
			<Dirichlet_boundary_condition units="molecules/voxel" enabled="false">0.1</Dirichlet_boundary_condition>
		</variable>

		<options>
			<calculate_gradients>false</calculate_gradients>
			<track_internalized_substrates_in_each_agent>true</track_internalized_substrates_in_each_agent>
			<!-- not yet supported --> 
			<initial_condition type="matlab" enabled="false">
				<filename>./config/initial.mat</filename>
			</initial_condition>
			<!-- not yet supported --> 
			<dirichlet_nodes type="matlab" enabled="false">
				<filename>./config/dirichlet.mat</filename>
			</dirichlet_nodes>
		</options>
	</microenvironment_setup>		
	
	<cell_definitions>
		<cell_definition name="default" ID="0">
			<phenotype>
				<cycle code="5" name="live">  
					<!-- using higher than normal significant digits to match divisions in default code -->
					<!-- use phase_transition_rates OR phase_durations -->
					<phase_transition_rates units="1/min"> 
						<rate start_index="0" end_index="0" fixed_duration="false">0.01254</rate> <!-- -->
					</phase_transition_rates>
					
					<!-- use phase_transition_rates OR phase_durations -->
					<!--
					<phase_durations units="min"> 
						<duration index="0" fixed_duration="false">300.0</duration>
					</phase_durations>
					-->
				</cycle>
				
				<death>  
					<model code="100" name="apoptosis"> 
						<death_rate units="1/min">5.31667e-05</death_rate>
						<!-- use phase_transition_rates OR phase_durations -->
						<!--
						<phase_transition_rates units="1/min">
							<rate start_index="0" end_index="1" fixed_duration="true">0.00193798</rate>
						</phase_transition_rates>
						-->
						<phase_durations units="min">
							<duration index="0" fixed_duration="true">516</duration>
						</phase_durations>
						<parameters>
							<unlysed_fluid_change_rate units="1/min">0.05</unlysed_fluid_change_rate>
							<lysed_fluid_change_rate units="1/min">0</lysed_fluid_change_rate>
							<cytoplasmic_biomass_change_rate units="1/min">1.66667e-02</cytoplasmic_biomass_change_rate>
							<nuclear_biomass_change_rate units="1/min">5.83333e-03</nuclear_biomass_change_rate>
							<calcification_rate units="1/min">0</calcification_rate>
							<relative_rupture_volume units="dimensionless">2.0</relative_rupture_volume>
						</parameters>
					</model> 

					<model code="101" name="necrosis">
						<death_rate units="1/min">0.0</death_rate>
						<!-- use phase_transition_rates OR phase_durations -->
						<!-- necrosis uses phase_duration[0] = 0 so that it always immediately
							 tries to transition and instead checks volume against the rupture
							 volume --> 
<!--						
						<phase_transition_rates units="1/min">
							<rate start_index="0" end_index="1" fixed_duration="false">9e9</rate>
							<rate start_index="1" end_index="2" fixed_duration="true">1.15741e-5</rate>
						</phase_transition_rates>
-->						
						<phase_durations units="min">
							<duration index="0" fixed_duration="true">0</duration>
							<duration index="1" fixed_duration="true">86400</duration>
						</phase_durations>
						
						<parameters>
							<unlysed_fluid_change_rate units="1/min">0.05</unlysed_fluid_change_rate>
							<lysed_fluid_change_rate units="1/min">0</lysed_fluid_change_rate>
							<cytoplasmic_biomass_change_rate units="1/min">1.66667e-02</cytoplasmic_biomass_change_rate>
							<nuclear_biomass_change_rate units="1/min">5.83333e-03</nuclear_biomass_change_rate>
							<calcification_rate units="1/min">0</calcification_rate>
							<relative_rupture_volume units="dimensionless">2.0</relative_rupture_volume>
						</parameters>
					</model> 
				</death>					
								

				<secretion>
					<substrate name="oxygen"> <!-- Left as in the TNF model -->
						<secretion_rate units="1/min">0</secretion_rate>
						<secretion_target units="substrate density">38</secretion_target>
						<uptake_rate units="1/min">10</uptake_rate>
						<net_export_rate units="total substrate/min">0</net_export_rate> 
					</substrate> 
				</secretion>

				<molecular />

				<intracellular type="maboss">
					<bnd_filename>./config/AGS_all_nodes.bnd</bnd_filename>
					<cfg_filename>./config/AGS_all_nodes.cfg</cfg_filename>
					<time_step>10</time_step>
					<scaling>0.1</scaling>
				</intracellular>
			</phenotype>
			
			<custom_data>
				<!-- TODO: Add these functions correctly into the custom. If not commented, there is a segkill -->

				<!-- Auxiliary variables used to monitorize simulation-->

				<!-- If SD 
				<drug_X_permeability type="double" units="um/min"> 0.1 </drug_X_permeability> 
				<drug_Y_permeability type="double" units="um/min"> 0.1 </drug_Y_permeability> 
				-->

				<!-- drug B (dB) 
				<drug_X_target type="string" units="dimensionless">anti_akt_node</drug_X_target>
				<drug_Y_target type="string" units="dimensionless">anti_pi3k_node</drug_Y_target>
				-->

			</custom_data>
		</cell_definition>
	</cell_definitions>

	<user_parameters>
		<random_seed type="int" units="dimensionless">0</random_seed> 
		<init_cells_filename type="string" units="dimensionless"> myinit2D.txt </init_cells_filename>
		

		<!-- Initial setup --> 
		<tumor_radius type="double" units="um"> 100.0 </tumor_radius> <!-- At 2D, should be 180 -->
		<membrane_length type="int" units=""> 470 </membrane_length>
		<number_of_cells type="int" units="dimensionless"> 100 </number_of_cells>

		<!-- Drug X pulse -->
		<drug_X_pulse_period type="double" units="min"> 1200 </drug_X_pulse_period> <!-- 150 -->
		<drug_X_pulse_duration type="double" units="min">10</drug_X_pulse_duration> <!-- 10 -->
		<drug_X_pulse_concentration type="double" units="min">5e-04</drug_X_pulse_concentration> <!-- 10 -->
		
		<!-- Drug Y pulse -->
		<drug_Y_pulse_period type="double" units="min"> 1200 </drug_Y_pulse_period> <!-- 150 -->
		<drug_Y_pulse_duration type="double" units="min">10</drug_Y_pulse_duration> <!-- 10 -->
		<drug_Y_pulse_concentration type="double" units="min">1.0</drug_Y_pulse_concentration> <!-- 10 -->

		<!-- drug X parameters -->
		<drug_X_permeability type="double" units="amol/um^3"> 0.01 </drug_X_permeability> 
		<drug_X_target type="string" units="">anti_TAK1</drug_X_target>
		<drug_X_half_max type="double" units="mM">5e-04</drug_X_half_max>

		<!-- drug Y parameters -->
		<drug_Y_permeability type="double" units="amol/um^3"> 0.01 </drug_Y_permeability>
		<drug_Y_target type="string" units="">none</drug_Y_target>
		<drug_Y_half_max type="double" units="mM">0.5</drug_Y_half_max>

		<!-- growth mapping -->
		<basal_growth_rate type="double" units="1/min">0.01254</basal_growth_rate> <!-- Same as in cell definition -->
		<hill_coeff_growth type="double" units="dimensionless">10.0</hill_coeff_growth>
		<K_half_growth type="double" units="dimensionless">0.00627</K_half_growth>

		<!-- apoptosis mapping -->
		<apoptosis_rate_basal type="double" units="1/min">0.0</apoptosis_rate_basal>
		<max_apoptosis_rate type="double" units="1/min">0.1</max_apoptosis_rate>
		<hill_coeff_apoptosis type="double" units="dimensionless">2.0</hill_coeff_apoptosis>
		<K_half_apoptosis type="double" units="dimensionless">0.09</K_half_apoptosis>

		<!-- Contact inhibition mapping -->
		<hill_coeff_pressure type="double" units="1/min">15.0</hill_coeff_pressure>
		<pressure_half type="double" units="1/min">1.0</pressure_half> <!-- 0.0001 -->
	</user_parameters>
	
	
</PhysiCell_settings>
